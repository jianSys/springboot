<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <!--导入属性配置 -->
    <properties resource="db.properties"></properties>

    <!--指定特定数据库的jdbc驱动jar包的位置 -->
    <classPathEntry location="${db.driverLocation}" />
    <!-- <classPathEntry
        location="D:/Java/Maven/reponsitory/mysql/mysql-connector-java/5.1.45/mysql-connector-java-5.1.45.jar" /> -->

    <context id="default" targetRuntime="MyBatis3">

        <!-- 一些工具 生成的实体类时的一些方法 -->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"></plugin>
        <!--<plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin"></plugin> -->
        <!--<plugin type="org.mybatis.generator.plugins.ToStringPlugin"></plugin> -->

        <!-- optional，旨在创建class时，对注释进行控制 -->
        <commentGenerator>
            <!-- 插入一个日期字段 -->
            <property name="suppressDate" value="true" />
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="suppressAllComments" value="true" />
        </commentGenerator>

        <!--jdbc的数据库连接 -->
        <jdbcConnection driverClass="${db.driverClassName}"
                        connectionURL="${db.url}" userId="${db.username}"
                        password="${db.password}">
            <property name="nullCatalogMeansCurrent" value="true" />
        </jdbcConnection>


        <!-- 非必需，类型处理器，在数据库类型和java类型之间的转换控制 -->
        <javaTypeResolver>
            <!-- This property is used to specify whether MyBatis Generator should
                force the use of java.math.BigDecimal for DECIMAL and NUMERIC fields, -->
            <!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，为 true时把JDBC DECIMAL
                和 NUMERIC 类型解析为java.math.BigDecimal -->
            <property name="forceBigDecimals" value="false" />
        </javaTypeResolver>


        <!-- Model模型生成器,用来生成含有主键key的类，记录类 以及查询Example类 targetPackage 指定生成的model生成所在的包名
            targetProject 指定在该项目下所在的路径 -->
        <javaModelGenerator
                targetPackage="cn.com.javakf.po" targetProject="./src/main/java">
            <!-- 是否允许子包，即targetPackage.schemaName.tableName -->
            <property name="enableSubPackages" value="false" />
            <!-- 是否对model添加 构造函数 -->
            <property name="constructorBased" value="true" />
            <!-- 是否对类CHAR类型的列的数据进行trim操作 -->
            <property name="trimStrings" value="true" />
            <!-- 建立的Model对象是否 不可改变 即生成的Model对象不会有 setter方法，只有构造方法 -->
            <property name="immutable" value="false" />
        </javaModelGenerator>

        <!--mapper映射文件生成所在的目录 为每一个数据库的表生成对应的SqlMap文件 -->
        <sqlMapGenerator targetPackage="cn.com.javakf.mapper"
                         targetProject="./src/main/java">
            <property name="enableSubPackages" value="false" />
        </sqlMapGenerator>

        <!-- targetPackage：mapper接口dao生成的位置 -->
        <javaClientGenerator type="XMLMAPPER"
                             targetPackage="cn.com.javakf.mapper" targetProject="./src/main/java">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false" />
        </javaClientGenerator>

        <!-- 配置表信息 -->
        <!-- schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample
            是否生成 example类 个人觉得生成那么多的example类很繁琐，因此设置为false -->
        <table schema="my_blog_db" tableName="tb_admin_user" domainObjectName="tbAdminUser"
               enableCountByExample="false" enableDeleteByExample="false"
               enableSelectByExample="false" enableUpdateByExample="false"  selectByExampleQueryId="false">
        </table>

        <table schema="mybatis" tableName="tb_blog"
               domainObjectName="tbBlog" enableCountByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               enableUpdateByExample="false"  selectByExampleQueryId="false">
        </table>
    </context>

</generatorConfiguration>
